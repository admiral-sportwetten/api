FORMAT: 1A

# ADMIRAL API

This is the documentation for the Admiral Sportwetten GmbH public API.

> THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS DOCUMENTATION.

The document describes the full extend of the APIs functionality, which does not
imply that you can use it is the described extend.

Depending on your access privileges some functionality of the API may be prohibited.

## Applying for API access keys

TBD

## HTTP verbs used

As usual with REST APIs HTTP verbs are used to determine the api calls intentions.

Except for special cases the following meanings, for HTTP verbs,  will be assumed:

| Verb     | Description     |
| :------------- | :------------- |
| POST | Create a new resource |
| GET | Retrieve an existing resource |
| PUT | Update an existing resource or create a new one |
| DELETE | Delete an existing resource |

## HTTP return codes

| Status code | Description     |
| :------------- | :------------- |
| 200 | The request has completed successfully and a response is provided |
| 201 | The request has completed successfully and the item is creates successfully |
| 204 | The request has completed successfully but no response is required |
| 202 | The request has completed successfully but the request processing has not finished yet |
| 206 | The request has completed successfully but the returned resource is only partial |
| 304 | The requested document was not modified |
| 400 | The request could not be understood by the server |
| 401 | The request requires user authentication which was not provided |
| 403 | The server understood the request but the request is not authorized to access the desired resource |
| 404 | The requested resource was not found |
| 419 | The Authentication timed out |
| 429 | The server will not process the request because the request quota is reached |
| 500 | The server encountered an unrecoverable exception, which prevents the request to complete |
| 501 | The requested functionality is not implemented or you are not authorized to use it |

## Headers

The _Admiral API_ takes full advantage of _HTTP headers_. Some headers can be
added to the request to influence the API response, while some headers are
added by the API itself to include additional meta-information in the response.

 ### Accept-Language

 If the _Accept-Language_ header is used in any request then the API will try to return
 a localized version of the response.

 The texts will most probably not be localized but the date, time and number
 formats will be localized.

 Taking that the following Language header is present in the request

        Accept-Language:`en-US,en;q=0.8,de-AT;q=0.6,de;q=0.4,sl;q=0.2`

Then the __en-US__ locale will be used to localize the response.

### Cache-Control

Each response will include a _Cache-Control_ header denoting if the response can
or can not be cached, or how the caching of the response should be handled.

The cache options include but are not limited to:

| Cache option | Description |
| :--- | :--- |
| public | The response my be cached using any cache, event a public shared cache |
| private | The response is only intended for a single user and may not be cached in a shared cache |
| no-cache | The response can not be cached on the client |

### Content-MD5

For some security critical information an additional _Content-MD5_ header my be included in the response.

        Content-MD5:  Q2hlY2sgSW50ZWdyaXR5IQ==

The MD5 header is generated as described in [RFC1864](https://tools.ietf.org/html/rfc1864)

### Expires

The expires header is included in all responses and denotes when the response is
to be considered obsolete.

_Note:_ The expiration header does not imply that the resource will in any way change after the expiration date is reached.

        Expires: Thu, 01 Dec 1994 16:00:00 GMT

### If-Modified-Since

The _If-Modified-Since_ header can be used to make a __GET__ request conditional.
If the header is included in a API request the result to be returned will be
additionally filtered for resources that have changed after the provided date.

        If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT

Taking the example above only resources changed since 1994-10-29T19:43:31Z will
be returned.

### Last-Modified

The _Last-Modified_ header is included in an API response and denotes the last
modification date of the resource.

        Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT

### X-AAPI-RequestId

Each response includes an _X-AAPI-RequestId_ header. This header contains an
unique string that can be used to investigate API failures or too determine
which request lead to which response.

        X-AAPI-RequestId: 806cbbcd-99c7-467e-a6a1-d976841518e7

### X-AAPI-Response-Time

Each response includes an _X-AAPI-Response-Time_ header. This header contains
the time taken for the request processing in milliseconds.

        X-AAPI-Response-Time: 78

# Group Clients

Exposes a REST API to manipulate and manage API clients

## Client collection [/clients]

Required access grants

| HTTP verb | Grant |
| :--- | :--- |
| POST, PUT | create_client |
| GET | read_own_clients |
| GET | read_all_clients |

### Create a new client [POST]

In this case bouth _POST_ and _PUT_ behave indistinguishable

+ Request

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 201 (application/json)

    + Header

            Location: clients/john124
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "client_id" : "john124",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z"
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }

### Read own/all clients [GET]

Depending on the grant associated with the request eighter the users own clients
or all clients in the database will be returned.

| Grant type | Result |
| :--- | :--- |
| read_own_clients | A list of user clients will be returned |
| read_all_clients | A list of all stored clients will be returned |

In the case of bouth grants beeing pressent the __read_all_clients__ takes presicence

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 200 (application/json)

    + Header

            Location: clients/

    + Body

            [{
                "client_id" : "john124",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            },
            {
                "client_id" : "john125",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }]

## Client resource interactions [/client/{client_identifier}]

Required access grants

| HTTP verb | Grant|
| :--- | :--- |
| PUT | update_client |
| GET | read_client |
| DELETE | delete_client |

+ parameters
    + client_identifier: john124 (string) - A string uniquelly identifiing a client

### Get client information [GET]

If the client unique identifier is known then a single client resource can be requested.

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 200 (application/json)

    + Header

            Location: clients/john124
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "client_id" : "john124",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }

+ Response 404 (application/json)

    + Header

            Location: clients/john124

### Update client [PUT]

The resource updated must exist, if this is not the case then a __404__ status code
will be returned.

Not all fields of the client resource can be updated. if an update is required
on a filed that is immutable then a __405__ status code will be returned.

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

    + Body

            {
                "description": "This is the new description"
            }

+ Response 202 (application/json)

    + Header

            Location: clients/john124
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "client_id" : "john124",
                "description" : "This is the new description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }

+ Response 404 (application/json)

    + Header

            Location: clients/john123

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

    + Body

            {
                "client_id": "new_john124"
            }

+ Response 405 (application/json)

    + Header

            Location: clients/john124

    + Body

            {
                "Message": "client_id is immutable",
                "valid_fields": [
                    "description",
                    "client_secret"
                ]
            }

### Delete client [DELETE]

Deleteing an non existent client will return a _204_ because the desired client
is not present in the collection.

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 204 (application/json)

## Client field manipulation [/client/{client_identifier}/{client_field}]

It is possible to read and update individual fields of the client resource.

Required access grants

| HTTP verb | Grant|
| :--- | :--- |
| PUT | update_client |
| GET | read_client |

+ parameters
    + client_identifier : john124 (string) - The unique identifier of the client
    + client_field : description (string) - The valid name of a client resource

### Get field [GET]

The requested _client_field_ must be a valid client resource field. If this is
not the case then a __404__ status code is returned.

If used to determine if the value of the field has cahnged since the last request
then the __IF-MODIFIED-SINCE__ header should be included. This will return a __304__
if the client resource filed was not changed or a  __200__ if it was.

+ Request

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 200 (application/json)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "description": "This is the resource description"
            }

+ Response 200 (text/plain)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            This is the resource description

+ Response 404

    + Header

            Location: clients/john124/notExistingField

+ Request

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT

+ Response 304 (application/json)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

### Update field [POST]

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

    + Body

            {
                "value" : "The resource new description"
            }

+ Response 204 (application/json)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

# Data Structures

## Pocket Overview (object)
+ id: eur_realmoney (string, required) - The pocket unique identifier
+ pocket_groups: G1, G2 (array, optional) - The Pocket groups the pocket belongs to
+ name: Euro pocket (string, optional) - The user friendly name of the pocket
+ balance (Balance)
+ details: /wallets/johnswallet/pockets/euro_pocket (string, required) - The relative link to the pocket details

## Pocket Detail (Pocket Overview)
+ type: realmoney (string, required) - The type of the pocket
+ transactions: /wallets/johnswallet/pockets/euro_pocket/transactions" (string, required) - The relative link to the pocket transactions

## Balance (object)
+ amount: 120.00 (number, required) - The wallets total balance by currency
+ currency (object)
    + name: Euro (string, required) - The user friendly name of the currency
    + symbol: € (string, optional) - Optional currency symbol
    + iso_code: EUR (string, required) - The ISO 4217 currency code

## Wallet (object)
+ total_balance (array[Balance], required)
+ transactions: wallets/johnswallet/transactions (string, required) - The relative url to the wallet history
+ debit: wallets/johnswallet/debit (string, required) - The relative url used to debit the current wallet
+ credit: wallets/johnswallet/credit (string, required) - The relative url used to credit the current wallet
+ startdebit: wallets/johnswallet/startdebit (string, required) - The relative url used to start a asyncronous debit on the current wallet
+ startcredit: wallets/johnswallet/startcredit (string, required) - The relative url used to start a asyncronous debit on the current wallet
+ pockets (array[Pocket Overview], required)

## Async Transaction Response (object)
+ transaction_id: sdkjfbsidf123123 (string, required) - The transaction id for the completted transaction
+ expires_at: `016-02-10T14:31:12Z` (string, required) - The time untill the transaction is keept open

## Transaction Response (object)
+ successfull: true (boolean, required) - Determines if the request was Successfull
+ affected_pockets (array[Pocket Overview])
+ balances (array[Balance])
+ transaction_id: sdkjfbsidf123123 (string, required) - The transaction id for the completted transaction
+ details: /wallets/johnswallet/transactions/sdkjfbsidf123123 (string, required) - The relative URL to the transaction details for this operation

## Transaction Detail (object)
+ timestamp: `2016-02-12T13:43:22Z` (string, required) - The timestamp of the transaction in UTC
+ status: Completed (string, required) - The status of the transaction. Values are [Completed, Pending, Canceled, Storno]
+ transaction_id: sdkjfbsidf123123 (string, required) - The unique transaction id
+ type: payin (string, required) - The transaction type
+ ammount (Balance)
+ tags: payin, customer (array, required) - The associated tags for this transaction

## Transaction Request (object)
+ amount: 20.00 (number, required) - The ammount that the wallet should be changed by
+ pocket: euro_pocket (string, required) - Identifies the pocket affected by the transaction
+ tags: payin, customer (array, required) - The associated tags for this transaction

# Group Wallets

## Wallet [/wallets/{wallet}]

Required access grants

| HTTP verb | Grant|
| :--- | :--- |
| GET | get_user_wallet |
| GET | get_wallet_pocket |
| POST | debit_user_wallet |
| POST | credit_user_wallet |

+ Parameters
    + wallet: johnswallet (string, required) - The unique web safe id of the wallet

### Get users wallet [GET]

Gets details about the wallet identified by the given wallet id

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)

    + Attributes(Wallet)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

### Debit/Credit users wallet [POST]

Debit the users wallet for the given amount

+ Request wit debit (application/json)

    + Attributes(Transaction Request)
        + operation: debit (string, required) - The operation to execute on the wallet

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123


+ Request with credit (application/json)

    + Attributes(Transaction Request)
        + operation: credit (string, required) - The operation to execute on the wallet

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)
    + Attributes(Transaction Response)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

## Debit users wallet [/wallets/{wallet}/debit]

| HTTP verb | Grant|
| :--- | :--- |
| POST | debit_user_wallet |

+ parameters
    + wallet: johnswallet (string) : A mandatory stirng whith which we can uniquelly identify a single user

### Debit users wallet [POST]

+ Request (application/json)

    + Attributes(Transaction Request)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)
    + Attributes(Transaction Response)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

## Credit users wallet [/wallets/{wallet}/credit]

| HTTP verb | Grant|
| :--- | :--- |
| POST | credit_user_wallet |

+ parameters
    + wallet: johnswallet (string) : A mandatory stirng whith which we can uniquelly identify a single user

### Credit users wallet [POST]

+ Request (application/json)
    + Attributes(Transaction Response)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123


+ Response 200 (application/json)
    + Attributes (Transaction Response)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

## Begin asyncronous debit [/wallets/{wallet}/startdebit]

| HTTP verb | Grant|
| :--- | :--- |
| POST | debit_async_user_wallet |

+ parameters
    + wallet: johnswallet (string) : A mandatory stirng whith which we can uniquelly identify a single user

### Debit users wallet [POST]

+ Request (application/json)
    + Attributes(Transaction Request)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 206 (application/json)
    + Attributes(Async Transaction Response)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

## Begin asyncronous creadit [/wallets/{wallet}/startcredit]

| HTTP verb | Grant|
| :--- | :--- |
| POST | credit_async_user_wallet |

+ parameters
    + wallet: johnswallet (string) : A mandatory stirng whith which we can uniquelly identify a single user

### Credit users wallet [POST]

+ Request (application/json)
    + Attributes(Transaction Request)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 206 (application/json)
    + Attributes(Async Transaction Response)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private


## Storno transaction [/wallets/{wallet}/storno]

| HTTP verb | Grant|
| :--- | :--- |
| POST | storno_user_wallet |

+ parameters
    + wallet: johnswallet (string) : A mandatory stirng whith which we can uniquelly identify a single user

### Storno transaction [POST]

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

    + Body

            {
                "transaction_id" : "023842poijflafijh8f73z920jfjow",
                "reason" : "Storno by customer",
                "tags" : ["storno", "STR_C", "by customer"]
            }

+ Response 200 (application/json)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

    + Body

            {
                "Successfull" : true,
                "storno_transaction_id" : "023842poijflafijh8f73z920jfjow"
            }

## Cancel an ongoing transaction [/wallets/{wallet}/cancel]

| HTTP verb | Grant|
| :--- | :--- |
| POST | debit_async_user_wallet |
| POST | credit_async_user_wallet |

+ parameters
    + wallet: johnswallet (string) : A mandatory stirng whith which we can uniquelly identify a single user

### Cancel transaction [POST]

+ Request (application/json)

    + Attributes (object)
        + transaction_id: 023842poijflafijh8f73z920jfjow (string, required) - The transaction id to cancel
        + reason: Canceled by customer (string, optional) - Optional clarification
        + tags: storno, CAN_C (array, required) - Array of tags to associate with the transactions

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 204 (application/json)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private

## Complete an ongoing transaction [/wallets/{wallet}/commit]

| HTTP verb | Grant|
| :--- | :--- |
| POST | debit_async_user_wallet |
| POST | credit_async_user_wallet |

+ parameters
    + wallet: johnswallet (string) - A mandatory stirng whith which we can uniquelly identify a single user

### Complete transaction [POST]

+ Request (application/json)

    + Attributes (object)
        + transaction_id: 023842poijflafijh8f73z920jfjow (string, required) - The transaction id to cancel

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)
    + Attributes (Transaction Response)

    + Header

            Location: wallets/johnswallet
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private


## Get the wallets transaction history [/wallets/{wallet}/transactions]

| HTTP verb | Grant|
| :--- | :--- |
| GET | view_wallet_history |

+ parameters
    + wallet: johnswallet (string) - A mandatory stirng whith which we can uniquelly identify a single user


### Get wallet transaction history [GET]

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)
    + Attributes(object)
        + transactions (array[Transaction Detail])

    + Header

            Location: wallets/johnswallet/pockets/euro_pocket
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private


## Get wallets individual pocket details [/wallets/{wallet}/pockets/{pocket}]

| HTTP verb | Grant|
| :--- | :--- |
| GET | view_wallet_pockets |

+ parameters
   + wallet: johnswallet (string, required) - A mandatory stirng whith which we can uniquelly identify a single user
   + pocket: euro_pocket (string, required) - String uniquelly identifying the pocket for which details should be retrieved


### Get pocket details [GET]

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)
    + Attributes(Pocket Detail)

    + Header

            Location: wallets/johnswallet/pockets/euro_pocket
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private


## Get wallets individual pockets transactions [/wallets/{wallet}/pockets/{pocket}/transactions/]

| HTTP verb | Grant|
| :--- | :--- |
| GET | view_wallet_pocket_history |

+ Parameters
   + wallet: johnswallet (string, required) - A mandatory stirng whith which we can uniquelly identify a single user
   + pocket: euro_pocket (string, required) - String uniquelly identifying the pocket whose history should be retrieved

### Get pocket history [GET]

+ Request (application/json)

   + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            clientId: adsaf2321224123

+ Response 200 (application/json)

    + Attributes(object)
        + transactions (array[Transaction Detail])

   + Header

            Location: wallets/johnswallet/pockets/euro_pocket/transactions
            Expires: Sun, 08 Nov 2015 21:11:41Z
            Last-Modified: Thu, 04 Jun 2015 21:11:41Z
            Cache-Control: private