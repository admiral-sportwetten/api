# Group Clients

Exposes a REST API to manipulate and manage API clients

## Client collection [/clients]

Required access grants

| HTTP verb | Grant |
| :--- | :--- |
| POST, PUT | create_client |
| GET | read_own_clients |
| GET | read_all_clients |

### Create a new client [POST]

In this case bouth _POST_ and _PUT_ behave indistinguishable

+ Request

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 201 (application/json)

    + Header

            Location: clients/john124
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "client_id" : "john124",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z"
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }

### Read own/all clients [GET]

Depending on the grant associated with the request eighter the users own clients
or all clients in the database will be returned.

| Grant type | Result |
| :--- | :--- |
| read_own_clients | A list of user clients will be returned |
| read_all_clients | A list of all stored clients will be returned |

In the case of bouth grants beeing pressent the __read_all_clients__ takes presicence

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 200 (application/json)

    + Header

            Location: clients/

    + Body

            [{
                "client_id" : "john124",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            },
            {
                "client_id" : "john125",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }]

## Client resource interactions [/client/{client_identifier}]

Required access grants

| HTTP verb | Grant|
| :--- | :--- |
| PUT | update_client |
| GET | read_client |
| DELETE | delete_client |

+ parameters
    + client_identifier: john124 (string) - A string uniquelly identifiing a client

### Get client information [GET]

If the client unique identifier is known then a single client resource can be requested.

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 200 (application/json)

    + Header

            Location: clients/john124
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "client_id" : "john124",
                "description" : "This is John's description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }

+ Response 404 (application/json)

    + Header

            Location: clients/john124

### Update client [PUT]

The resource updated must exist, if this is not the case then a __404__ status code
will be returned.

Not all fields of the client resource can be updated. if an update is required
on a filed that is immutable then a __405__ status code will be returned.

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

    + Body
            {
                "description": "This is the new description"
            }

+ Response 202 (application/json)

    + Header

            Location: clients/john124
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "client_id" : "john124",
                "description" : "This is the new description",
                "published_at" : "2014-01-01T23:28:56.782Z",
                "last_modified" : "2014-01-01T23:28:56.782Z",
                "valid_from" : "2014-01-01T23:28:56.782Z",
                "valid_to" : "2014-01-01T23:28:56.782Z"
            }

+ Response 404 (application/json)

    + Header

            Location: clients/john123

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

    + Body
            {
                "client_id": "new_john124"
            }

+ Response 405 (application/json)

    + Header

            Location: clients/john124

    + Body

            {
                "Message": "client_id is immutable",
                "valid_fields": [
                    "description",
                    "client_secret"
                ]
            }

### Delete client [DELETE]

Deleteing an non existent client will return a _204_ because the desired client
is not present in the collection.

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 204 (application/json)

## Client field manipulation [/client/{client_identifier}/{client_field}]

It is possible to read and update individual fields of the client resource.

Required access grants

| HTTP verb | Grant|
| :--- | :--- |
| PUT | update_client |
| GET | read_client |

+ parameters
    + client_identifier : john124 (string) - The unique identifier of the client
    + client_field : description (string) - The valid name of a client resource

### Get field [GET]

The requested _client_field_ must be a valid client resource field. If this is
not the case then a __404__ status code is returned.

If used to determine if the value of the field has cahnged since the last request
then the __IF-MODIFIED-SINCE__ header should be included. This will return a __304__
if the client resource filed was not changed or a  __200__ if it was.

+ Request

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

+ Response 200 (application/json)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            {
                "description": "This is the resource description"
            }

+ Response 200 (text/plain)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

    + Body

            This is the resource description

+ Response 404

    + Header

            Location: clients/john124/notExistingField

+ Request

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832
            If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT

+ Response 304 (application/json)

    + Header

            Location: clients/john124/description
            Expires: Sun, 08 Nov 2015 21:11:41 +0000
            Last-Modified: Thu, 04 Jun 2015 21:11:41 +0000
            Cache-Control: private

### Update field [POST]

+ Request (application/json)

    + Header

            AccessToken: ijsefh938ru23p40i20irjdw09d832

    + Body

            {
                "value" : "The resource new description"
            }
