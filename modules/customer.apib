## Group Customer

Resource related to the customer and the management of their data

## Customer [/customers/{customerName}]

A customer is a user known to the system with the potential to produce hold on the disctribution channel

+ parameters
    + customerName: John124 (required, string) - The customers unique name

### View  customer details [GET]

+ Response 200 (application/json)

    + Attributes
        + salutation: Mr/Mrs (string) - The salutation whith whicht the customer wishes to be addressed
        + name: John (string) - The customers real name
        + surname: Doh (string) - The customers real surname
        + birthday: 25.10.1982 (string) - The customers birthday
        + address (object)
            + street: Last street (string) - The customers street of residence
        + password: Johny123rocks (string) - The customers password


    + Body

            {
                "salutation": "Mr.",
                "name": "John",
                "surname": "Doh",
                "birthday": {
                    "day": 25,
                    "month": 10,
                    "year": 1982
                },
                "address":{
                    "street": "Some street",
                    "houserNumber": "25/3",
                    "zip": "1200",
                    "city": "Vienna",
                    "country": "AUT"
                },
                "password": "Johny123rocks",
                "userName": "Johny123",
                "userTimeZone": "GMT+2",
                "currency": "EUR",
                "oddsFormat": "EU",
                "securityQuestion" : {
                    "question": "Happy place",
                    "answer": "back garden",
                    "hint": "Where I proposed"
                },
                "termsAndConditionsAccepted": true,
                "newsletter" : {
                    "sms": false,
                    "email": true
                }
            }

+ Response 404 (application/json)

        {
            "Message" : "Data not found"
        }


### Create new customer [POST]

+ Request (application/json)

        {
            "salutation": "Mr.",
            "name": "John",
            "surname": "Doh",
            "birthday": {
                "day": 25,
                "month": 10,
                "year": 1982
            },
            "address":{
                "street": "Some street",
                "houserNumber": "25/3",
                "zip": "1200",
                "city": "Vienna",
                "country": "AUT"
            },
            "password": "Johny123rocks",
            "userName": "Johny123",
            "userTimeZone": "GMT+2",
            "currency": "EUR",
            "oddsFormat": "EU",
            "securityQuestion" : {
                "question": "Happy place",
                "answer": "back garden",
                "hint": "Where I proposed"
            },
            "termsAndConditionsAccepted": true,
            "newsletter" : {
                "sms": false,
                "email": true
            }
        }

+ Response 201 (application/json)

+ Response 403 (application/json)

### Remove customer [DELETE]

+ Response 202 (application/json)

## Customer details [/customers/{customerName}/isunique]

Determine if the given user name is already taken.

+ parameters
    + customerName: John123 (required, string) - The customers unique name

### Check customer name [GET]

+ Response 200 (application/json)

        {
            "IsUnique": true
        }

+ Response 200 (application/json)

        {
            "IsUnique": false,
            "Suggestions": ["John123!", "BetJohn123", "John1232"]
        }
